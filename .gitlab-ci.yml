stages:
  - build
  - scan
  - sign
  - push

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  REPORT_DIR: scan_reports

build_image:
  stage: build
  image: docker:25
  services:
    - docker:25-dind
  script:
    - docker build -t $IMAGE_NAME .
  artifacts:
    paths:
      - $REPORT_DIR
    expire_in: 1 week

scan_image:
  stage: scan
  image: alpine:3.20
  before_script:
    # Install tools
    - apk add --no-cache curl bash jq
    - curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
    - curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
    - wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.56.2_Linux-64bit.tar.gz
    - tar zxvf trivy_*.tar.gz && mv trivy /usr/local/bin/
  script:
    - mkdir -p $REPORT_DIR
    - echo "🔍 Generating SBOM..."
    - syft $IMAGE_NAME -o json > $REPORT_DIR/sbom.json
    - syft $IMAGE_NAME -o table > $REPORT_DIR/sbom.txt
    - echo "🛡 Scanning with Grype..."
    - grype sbom:$REPORT_DIR/sbom.json -o json > $REPORT_DIR/grype.json
    - grype sbom:$REPORT_DIR/sbom.json -o table > $REPORT_DIR/grype.txt
    - echo "🛡 Scanning with Trivy..."
    - trivy image $IMAGE_NAME --format json --output $REPORT_DIR/trivy.json
    - trivy image $IMAGE_NAME --format table --output $REPORT_DIR/trivy.txt
  artifacts:
    paths:
      - $REPORT_DIR
    expire_in: 1 week
  dependencies:
    - build_image

sign_image:
  stage: sign
  image: alpine:3.20
  before_script:
    - apk add --no-cache curl bash
    - curl -sSfL https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 -o cosign
    - chmod +x cosign && mv cosign /usr/local/bin/
  script:
    - echo "$COSIGN_KEY" > cosign.key
    - echo "$COSIGN_PUB" > cosign.pub
    - cosign sign --key cosign.key $IMAGE_NAME
    - cosign verify --key cosign.pub $IMAGE_NAME
  only:
    - main
  dependencies:
    - build_image

push_image:
  stage: push
  image: docker:25
  services:
    - docker:25-dind
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY"
    - docker push $IMAGE_NAME
  only:
    - main
  dependencies:
    - build_image
